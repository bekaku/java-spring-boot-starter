<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bekaku.api.spring.mybatis.FileManagerMybatis">
    <!--    Query https://mybatis.org/mybatis-3/dynamic-sql.html-->
    <sql id="mainQuery">
        SELECT f.id,
        m.name fileMime,
        f.original_file_name fileName,
        f.file_path filePath,
        f.file_size fileSize,
        f.created_date createdDate,
        f.created_date latestUpdated,
        f.owner ownerId,
        NULL updatedUser,
        '0' AS directoryFolder
        FROM file_manager f
        LEFT JOIN file_mime m ON f.file_mime_id = m.id
    </sql>
    <sql id="dirQuery">
        SELECT
        dir.id,
        'directory' AS fileMime,
        dir.name fileName,
        '' AS filePath,
        dir.file_size AS fileSize,
        dir.created_date createdDate,
        dir.latest_updated latestUpdated,
        dir.owner ownerId,
        dir.updated_user updatedUser,
        '1' AS directoryFolder
        FROM
        files_directory dir
    </sql>
    <select id="findForPublicById" resultMap="findForPublicByIdResult">
        <include refid="mainQuery"/>
        WHERE f.deleted is false AND f.id= #{id}
    </select>

    <select id="findAllFolderAndFileByParentFolder" resultMap="findForPublicByIdResult">
        <include refid="mainQuery"/>
        <choose>
            <when test="parentDirectoryId != null">
                WHERE f.deleted is false AND f.files_directory_id= #{parentDirectoryId}
            </when>
            <otherwise>
                WHERE f.deleted is false AND f.files_directory_id IS NULL
            </otherwise>
        </choose>
        AND f.owner = #{ownerId}

        UNION ALL
        <include refid="dirQuery"/>
        <choose>
            <when test="parentDirectoryId != null">
                WHERE dir.files_directory_parent= #{parentDirectoryId}
            </when>
            <otherwise>
                WHERE dir.files_directory_parent IS NULL
            </otherwise>
        </choose>
        AND dir.owner = #{ownerId}

        <if test="page.sortfield != null and page.sortmode != null">
            order by ${page.sortfield} ${page.sortmode}
        </if>
        <if test="page.offset != null and page.offset != null">
            <!--            Mysql-->
            <!--            limit #{page.offset}, #{page.limit}-->
            <!--            Postgres-->
            LIMIT #{page.limit} OFFSET #{page.offset}
        </if>
    </select>

    <!--Result Map-->
    <resultMap id="findForPublicByIdResult" type="com.bekaku.api.spring.vo.FileManagerPublicVo">
        <id column="id" property="id"/>
        <result column="directoryFolder" property="directoryFolder"/>
        <result column="fileMime" property="fileMime"/>
        <result column="fileName" property="fileName"/>
        <result column="filePath" property="filePath"/>
        <result column="fileSize" property="fileSize"/>
        <result column="createdDate" property="createdDate"/>
        <result column="latestUpdated" property="latestUpdated"/>
        <result column="ownerId" property="ownerId"/>
        <result column="updatedUser" property="updatedUserId"/>
    </resultMap>
</mapper>
